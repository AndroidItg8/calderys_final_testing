/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * gradle plugin from the resource data it found. It
 * should not be modified by hand.
 */
package com.itg.calderysapp.caldNet.newIndent.createIntent.mvp;

import com.itg.calderysapp.caldNet.newIndent.Deetails.model.Indents;
import com.itg.calderysapp.caldNet.newIndent.Deetails.model.IntentDetailModel;
import com.itg.calderysapp.caldNet.newIndent.createIntent.model.SpinnerGenericModel;
import com.itg.calderysapp.caldNet.newIndent.intent.model.PaginationModel;
import com.itg.calderysapp.caldNet.newIndent.intent.model.ViewDraftModel;
import com.itg.calderysapp.common.CommonListener;
import com.itg.calderysapp.common.NetworkUtility;

import java.util.List;

import io.reactivex.disposables.Disposable;

public class CreateIntentModuleImp implements CreateIntentMVP.CreateIntentModule {


    private static final String APPROVED = "S";
    private static final String REJECT = "R";


    @Override
    public void onDownloadMaterialList(PaginationModel model, CommonListener.CreateIntentListener listener) {

    }

    @Override
    public void onDownloadEditViewDraft(ViewDraftModel model, CommonListener.CreateIntentListener listener) {
        new NetworkUtility.NetworkBuilder().setHeader().build().getEditViewDraftModel(model, new NetworkUtility.ResponseListener() {
            @Override
            public void onSuccess(Object message) {
                listener.onDownloadEditViewDraft((Indents) message);

            }

            @Override
            public void onFailure(Object err) {
                listener.onFail(err.toString());

            }

            @Override
            public void onSomethingWrong(Object e) {
                listener.onError(e);

            }
        });

    }


    @Override
    public void onSaveApproved(IntentDetailModel model, CommonListener.CreateIntentListener listener ) {
        new NetworkUtility.NetworkBuilder().build().updateIndentStatus(model,APPROVED, new NetworkUtility.ResponseListener() {
            @Override
            public void onSuccess(Object message) {
                if(message instanceof String)
                    listener.onSuccess(message,APPROVED);


            }

            @Override
            public void onFailure(Object err) {
                listener.onFail(err.toString());

            }

            @Override
            public void onSomethingWrong(Object e) {
                ((Throwable)e).printStackTrace();
                listener.onError(e.toString());

            }
        });
    }

    @Override
    public void onSaveReject(IntentDetailModel model, CommonListener.CreateIntentListener listener ) {
        new NetworkUtility.NetworkBuilder().build().updateIndentStatus(model,REJECT, new NetworkUtility.ResponseListener() {
            @Override
            public void onSuccess(Object message) {
                if(message instanceof String)
                    listener.onSuccess(message, REJECT);


            }

            @Override
            public void onFailure(Object err) {
                listener.onFail(err.toString());

            }

            @Override
            public void onSomethingWrong(Object e) {
                ((Throwable)e).printStackTrace();

                listener.onError(e.toString());

            }
        });
    }

    @Override
    public void onDeleteIndent(IntentDetailModel indentModel, CommonListener.CreateIntentListener listener) {
        new NetworkUtility.NetworkBuilder().build().cancelIndentAll(indentModel, new NetworkUtility.ResponseListener() {
            @Override
            public void onSuccess(Object message) {
                listener.onSuccess(message, APPROVED);


            }

            @Override
            public void onFailure(Object err) {
                listener.onFail(err.toString());

            }

            @Override
            public void onSomethingWrong(Object e) {
                listener.onError(e.toString());

            }
        });
    }

    @Override
    public void downloadEqpCode(String id,EqpDataListener listener) {
        Disposable disposable=new NetworkUtility.NetworkBuilder().build().downloadEqp(id, new NetworkUtility.ResponseListener() {
            @Override
            public void onSuccess(Object message) {
                if(message!=null){
                    listener.onEqpDataAvail((List<SpinnerGenericModel>)message);
                }
            }

            @Override
            public void onFailure(Object err) {

            }

            @Override
            public void onSomethingWrong(Object e) {

            }
        });
    }

    @Override
    public void onDestroy() {

    }
}